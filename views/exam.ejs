<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <title>Exam section</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="stylesheet" href="/stylesheets/exam.css" />
</head>

<body>
    <div id="header" class="custom-navbar navbar-light header-container">
        <!-- Company Logo -->
        <a class="navbar-brand" href="#">
            <img src="/images/logo.png" width="100%" height="50" class="d-inline-block align-top" alt="">
        </a>
        <div id="studentName">
            <%= user_name %>
        </div>
        <div id="timer">04:00:00</div>
        <div id="flex-container" style="display: none;">
            <div class="homeBtn" id="homeBtn">
                <a href="/student/dashboard"><button>Home</button></a>
            </div>
            <a href=""><button class="logout-button" id="logout-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewBox="0 0 16 16">
                        <g color="#000000" fill="#ffffff" font-family="sans-serif" font-weight="400"
                            white-space="normal">
                            <path
                                d="M1 7.92a6.94 6.94 0 0 0 .324 2.201A7.004 7.004 0 0 0 8 15a7.004 7.004 0 0 0 6.676-4.879 6.978 6.978 0 0 0-2.662-7.818l-1.145 1.64a4.96 4.96 0 0 1 1.9 5.575A4.99 4.99 0 0 1 8 13a4.99 4.99 0 0 1-4.77-3.482 4.96 4.96 0 0 1 1.9-5.575l-1.144-1.64A6.985 6.985 0 0 0 1 7.92z"
                                overflow="visible"
                                style="line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal" />
                            <path d="M7 1v7h2V.75z" overflow="visible"
                                style="line-height:normal;font-variant-ligatures:none;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;text-transform:none;shape-padding:0;isolation:auto;mix-blend-mode:normal;marker:none" />
                        </g>
                    </svg>
                </button>
            </a>
        </div>
    </div>

    <div id="questions-container">
        <div id="result-container">
        </div>
        <div id="questions">
            <div class="sysInstText1" style="height: 93%; width: 97%; overflow: auto; padding-left: 10px;"
                id="sysInstText">
                <div>
                    <h5> </h5>
                    <center>
                        <font size="4">Please read the instructions carefully </font>
                    </center>
                </div>
                <p><strong><u>General Instructions:</u></strong></p>
                <ol style="TEXT-ALIGN: left; LIST-STYLE-TYPE: decimal; PADDING-LEFT: 4%; PADDING-TOP: 3px">
                    <li>Total duration of examination is 4 Hours.</li>
                    <li>The clock will be set at the server. The countdown timer in the top right corner of screen
                        will display the remaining time available for you to complete the examination. When the
                        timer reaches zero, the examination will end by itself. You will not be required to end or
                        submit your examination.</li>
                    <li>The Question Palette displayed on the right side of screen will show the status of each
                        question using one of the following symbols: <table class="instruction_area"
                            style="FONT-SIZE: 100%">
                            <tbody>
                                <tr>
                                    <td><span class="not_visited" title="Not Visited">1</span></td>
                                    <td>You have not visited the question yet.</td>
                                </tr>
                                <tr>
                                    <td><span class="not_answered" title="Not Answered">2</span></td>
                                    <td>You have not answered the question.</td>
                                </tr>
                                <tr>
                                    <td><span class="answered" title="Answered">3</span></td>
                                    <td>You have answered the question.</td>
                                </tr>
                                <tr>
                                    <td><span class="review" title="Marked for Review">4</span></td>
                                    <td>You have NOT answered the question, but have marked the question for review.
                                    </td>
                                </tr>
                                <tr>
                                    <td><span class="review_marked_considered"
                                            title="Answered &amp; Marked for Review">5</span></td>
                                    <td>The question(s) "Answered and Marked for Review" will be considered for
                                        evaluation.</td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <li style="LIST-STYLE-TYPE: none">The Marked for Review status for a question simply indicates
                        that you would like to look at that question again.</li>
                </ol>
                <ol start="4" style="TEXT-ALIGN: left; LIST-STYLE-TYPE: decimal; PADDING-LEFT: 4%; PADDING-TOP: 3px">
                    <li>You can click on the "&gt;" arrow which appears to the left of question palette to collapse
                        the question palette thereby maximizing the question window. To view the question palette
                        again, you can click on "&lt; " which appears on the right side of question window.</li>
                    <li>You can click on your "Profile" image on top right corner of your screen to change the
                        language during the exam for entire question paper. On clicking of Profile image you will
                        get a drop-down to change the question content to the desired language.</li>
                    <li>You can click on <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                            fill="currentColor" class="bi bi-arrow-down-circle" viewBox="0 0 16 16">
                            <path fill-rule="evenodd"
                                d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v5.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293z" />
                        </svg> to navigate to the bottom and <svg xmlns="http://www.w3.org/2000/svg" width="16"
                            height="16" fill="currentColor" class="bi bi-arrow-up-circle" viewBox="0 0 16 16">
                            <path fill-rule="evenodd"
                                d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707z" />
                        </svg>to navigate to the top of the question area,
                        without scrolling.</li>
                </ol> <br> <strong><u>Navigating to a Question:</u></strong>
                <ol start="7" style="TEXT-ALIGN: left; LIST-STYLE-TYPE: decimal; PADDING-LEFT: 4%; PADDING-TOP: 3px ">
                    <li>To answer a question, do the following: <ol
                            style="TEXT-ALIGN: left; PADDING-LEFT: 4%; PADDING-TOP: 3px " type="a">
                            <li>Click on the question number in the Question Palette at the right of your screen to
                                go to that numbered question directly. Note that using this option does NOT save
                                your answer to the current question.</li>
                            <li>Click on <b>Save &amp; Next</b> to save your answer for the current question and
                                then go to the next question.</li>
                            <li>Click on <b>Mark for Review &amp; Next</b> to save your answer for the current
                                question, mark it for review, and then go to the next question.</li>
                        </ol>
                    </li>
                </ol>
                <p><b><u>Answering a Question : </u></b></p>
                <ol start="8" style="TEXT-ALIGN: left; LIST-STYLE-TYPE: decimal; PADDING-LEFT: 4%; PADDING-TOP: 3px ">
                    <li>Procedure for answering a multiple choice type question: <ol
                            style="TEXT-ALIGN: left; PADDING-LEFT: 4%; PADDING-TOP: 3px " type="a">
                            <li>To select your answer, click on the button of one of the options</li>
                            <li>To deselect your chosen answer, click on the button of the chosen option again or
                                click on the <b>Clear Response</b> button</li>
                            <li>To change your chosen answer, click on the button of another option</li>
                            <li>To save your answer, you MUST click on the<b> Save &amp; Next</b> button</li>
                            <li>To mark the question for review, click on the<b> Mark for Review &amp; Next</b>
                                button.</li>
                        </ol>
                    </li>
                </ol>
                <ol start="9" style="TEXT-ALIGN: left; LIST-STYLE-TYPE: decimal; PADDING-LEFT: 4%; PADDING-TOP: 3px ">
                    <li>To change your answer to a question that has already been answered, first select that
                        question for answering and then follow the procedure for answering that type of question.
                    </li>
                </ol>
                <p><b><u>Navigating through sections:</u></b></p>
                <ol start="10" style="TEXT-ALIGN: left; LIST-STYLE-TYPE: decimal; PADDING-LEFT: 4%; PADDING-TOP: 3px ">
                    <li>Sections in this question paper are displayed on the top bar of the screen. Questions in a
                        section can be viewed by clicking on the section name. The section you are currently viewing
                        is highlighted.</li>
                    <li>After clicking the Save &amp; Next button on the last question for a section, you will
                        automatically be taken to the first question of the next section.</li>
                    <li>You can shuffle between sections and questions anytime during the examination as per your
                        convenience only during the time stipulated.</li>
                    <li>Candidate can view the corresponding section summary as part of the legend that appears in
                        every section above the question palette.</li>
                </ol>
                <p class="imageZoom" style="display: none;"><br> <b><u>Instruction for images:</u></b></p>
                <ol start="14" style="TEXT-ALIGN: left; LIST-STYLE-TYPE: decimal; PADDING-LEFT: 4%; PADDING-TOP: 3px ">
                    <li>To zoom the image provided in the question roll over it.</li>
                </ol>
            </div>
        </div>

        <div id="question-buttons">
        </div>
        <button type="button" class="mark-for-review" id="mark-for-review">Mark for Review</button>
        <button class="next-button" id="next-button">Next</button>
        <button class="next-button" id="next-button2" style="display: none;">Next</button>
    </div>

    <script>
        let question_number = 1;
        const examResult = {};
        const userAnswers = [];

        function showQuestion(number) {
            question_number = number;
            var questions = document.getElementsByClassName('question');
            for (var i = 0; i < questions.length; i++) {
                questions[i].style.display = 'none';
            }
            document.getElementById('question' + number).style.display = 'block';

            var button = document.querySelector('.question-button:nth-child(' + number + ')');
            if (button.classList.contains('answered')) {
                button.classList.remove('not-visited', 'not-answered', 'marked');
                button.classList.add('answered');
            } else if (button.classList.contains('marked')) {
                button.classList.remove('not-visited', 'not-answered', 'answered');
                button.classList.add('marked');
            } else {
                button.classList.remove('not-visited', 'answered', 'marked');
                button.classList.add('not-answered');
            }
        }

        document.getElementById('next-button').addEventListener('click', function () {
            document.getElementById("sysInstText").style.display = "none";
            document.getElementById("mark-for-review").style.display = "block";
            document.getElementById("question-buttons").style.display = "flex";
            document.getElementById("next-button").style.display = "none";
            document.getElementById("next-button2").style.display = "block";
            document.getElementById("questions").style.right = "325px";
            const questions = document.getElementsByClassName('question');
            questions[0].style.display = 'none';
            document.getElementById('question' + 1).style.display = 'block';

            const button = document.querySelector('.question-button:nth-child(' + 1 + ')');
            if (button.classList.contains('answered')) {
                button.classList.remove('not-visited', 'not-answered', 'marked');
                button.classList.add('answered');
            } else if (button.classList.contains('marked')) {
                button.classList.remove('not-visited', 'not-answered', 'answered');
                button.classList.add('marked');
            } else {
                button.classList.remove('not-visited', 'answered', 'marked');
                button.classList.add('not-answered');
            }
        })

        // Event listener for the Next button
        document.getElementById("next-button2").addEventListener("click", function () {
            var questions = document.getElementsByClassName('question'); // Get all elements with class 'question'
            var totalQuestions = questions.length;

            console.log("Current question number before increment:", question_number); // Log the question number before increment
            if (question_number === 100) {
                document.getElementById("next-button2").textContent = "Finish";
            }

            // Increment the question number
            question_number += 1;

            console.log("Current question number after increment:", question_number); // Log the question number after increment

            // If the button text is "Finish", handle the action 
            if (this.textContent.trim() === "Finish") {
                console.log("Finish button clicked on question number:", question_number); // Log when the Finish button is clicked

                document.getElementById("question-buttons").style.display = "none";
                document.getElementById("questions").style.display = "none";
                document.getElementById("mark-for-review").style.display = "none";
                document.getElementById("next-button2").style.display = "none";
                document.getElementById("timer").style.display = "none";

                // Show the flex container with the logout and home buttons
                document.getElementById("flex-container").style.display = "flex";
                document.getElementById("logout-button").style.display = "block";
                document.getElementById("homeBtn").style.display = "flex";

                let correctAnswers = 0;

                for (let question in examResult) {
                    if (examResult[question] === true) {
                        correctAnswers++;
                    }
                }
                let wrongAnswers = totalQuestions - correctAnswers;
                let correctAnswerPercentage = (correctAnswers / totalQuestions) * 100;
                let result = correctAnswerPercentage >= 70 ? 'Pass' : 'Fail';

                var parentElement = document.getElementById("questions");
                var childElements = parentElement.children;
                var resultsHTML = [];

                for (var i = 0; i < childElements.length; i++) {
                    if (childElements[i].id !== "sysInstText") {
                        childElements[i].style.display = "block";
                        var checkIcons = childElements[i].getElementsByClassName("check-icon");
                        for (var j = 0; j < checkIcons.length; j++) {
                            checkIcons[j].style.display = "inline";
                        }
                        var explanation = childElements[i].getElementsByClassName("explanation")[0];
                        if (explanation) {
                            explanation.style.display = "block";
                        }
                        resultsHTML.push(childElements[i].outerHTML); // Store the HTML of each element
                    }
                }

                const examResultData = {
                    result: result,
                    number_of_questions: totalQuestions,
                    questions_answered: Object.keys(examResult).length,
                    correct_answers: correctAnswers,
                    wrong_answers: wrongAnswers,
                    percentage_scored: correctAnswerPercentage.toFixed(2),
                    exam_id: "<%=exam_id%>",
                    course_id: "<%=course_id%>",
                    // paper_id: "<%=paper_id%>",
                    results: resultsHTML?.join(" ")?.replace(/\s+/g, " ") // Join the HTML strings into one string
                };

                fetch('/result/exam-results', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(examResultData)
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Failed to submit exam result');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Exam result submitted successfully:', data);
                    })
                    .catch(error => {
                        console.error('Error submitting exam result:', error.message);
                    });

                document.getElementById('result-container').innerHTML = `
               <table style="width: 100%; border-collapse: collapse;">
            <tr style="background-color: #f2f2f2;">
                <th style="border: 1px solid #ddd; padding: 8px;">No. of Questions</th>
                <td style="border: 1px solid #ddd; padding: 8px;">${totalQuestions}</td>
            </tr>
            <tr>
                <th style="border: 1px solid #ddd; padding: 8px;">Questions Answered</th>
                <td style="border: 1px solid #ddd; padding: 8px;">${Object.keys(examResult).length}</td>
            </tr>
            <tr style="background-color: #f2f2f2;">
                <th style="border: 1px solid #ddd; padding: 8px;">Correct Answers</th>
                <td style="border: 1px solid #ddd; padding: 8px;">${correctAnswers}</td>
            </tr>
            <tr>
                <th style="border: 1px solid #ddd; padding: 8px;">Wrong Answers</th>
                <td style="border: 1px solid #ddd; padding: 8px;">${wrongAnswers}</td>
            </tr>
            <tr style="background-color: #f2f2f2;">
                <th style="border: 1px solid #ddd; padding: 8px;">Scored Percentage %</th>
                <td style="border: 1px solid #ddd; padding: 8px;">${correctAnswerPercentage.toFixed(2)}%</td>
            </tr>
            <tr>
                <th style="border: 1px solid #ddd; padding: 8px;">Result</th>
                <td style="border: 1px solid #ddd; padding: 8px;">${result}</td>
            </tr>
            <tr>
                <th style="border: 1px solid #ddd; padding: 8px;">Show Answers</th>
                <td style="border: 1px solid #ddd; padding: 8px;">
                    <button id="show-answers-button">
                        show
                    </button>
                </td>
            </tr>
        </table>
    `;

            } else {
                // If the current question number is 100, change the button text to "Finish"
                if (question_number === 100) {
                    this.textContent = "Finish";
                    console.log(question_number);
                }

                console.log("Navigating to question number:", question_number); // Log the question number when navigating to a new question

                for (var i = 0; i < questions.length; i++) {
                    questions[i].style.display = 'none';
                }
                document.getElementById('question' + question_number).style.display = 'block';

                var button = document.querySelector('.question-button:nth-child(' + question_number + ')');
                if (button.classList.contains('answered')) {
                    button.classList.remove('not-visited', 'not-answered', 'marked');
                    button.classList.add('answered');
                } else if (button.classList.contains('marked')) {
                    button.classList.remove('not-visited', 'not-answered', 'answered');
                    button.classList.add('marked');
                } else {
                    button.classList.remove('not-visited', 'answered', 'marked');
                    button.classList.add('not-answered');
                }
            }

            document.getElementById("show-answers-button")?.addEventListener("click", function () {
                // Handle show answers button action
                document.getElementById('result-container').style.display = "none";
                document.getElementById("questions").style.display = "block";
                var parentElement = document.getElementById("questions");
                var childElements = parentElement.children;

                for (var i = 0; i < childElements.length; i++) {
                    if (childElements[i].id !== "sysInstText") {
                        childElements[i].style.display = "block";
                        var checkIcons = childElements[i].getElementsByClassName("check-icon");
                        for (var j = 0; j < checkIcons.length; j++) {
                            checkIcons[j].style.display = "inline";
                        }
                        var explanation = childElements[i].getElementsByClassName("explanation")[0];
                        if (explanation) {
                            explanation.style.display = "block";
                        }
                    }
                }
            });
        });

        function answerQuestion(number) {
            console.log(number, option)
            var button = document.querySelector('.question-button:nth-child(' + number + ')');
            console.log(button);
            button.classList.remove('not-visited', 'not-answered', 'marked');
            button.classList.add('answered');
        }

        window.onload = function () {

            fetch(`/question/exam-questions`)
                .then(response => response.json())
                .then(data => {
                    populateQuestions(data);
                    populateQuestionButtons(Object.keys(data).length); // Assuming data is grouped by exam_id
                })
                .catch(error => console.error('Error:', error));


            var options = document.querySelectorAll('input[type=radio]');
            options.forEach((option, index) => {
                option.addEventListener('change', function () {
                    answerQuestion(Math.floor(index / 4) + 1);
                });
            });

            document.getElementById("question-buttons").style.display = "none";
            document.getElementById("mark-for-review").style.display = "none";
            document.getElementById("questions").style.right = "0px";
        };

        function populateQuestions(data) {
            var questionsContainer = document.getElementById('questions');
            data.forEach((item, index) => {
                var questionDiv = document.createElement('div');
                questionDiv.id = 'question' + (index + 1);
                questionDiv.classList.add('question');
                questionDiv.style.display = 'none';
                questionDiv.innerHTML = `
                    <h3 id="Question ${index + 1}"}>Question ${index + 1}:<br> ${item.question_text.replace(/\n/g, '<br>')}</h3>
                    <div class='options-container'>
                        <input type="radio" name="q${index + 1}" data-selected="false"  value="${item.option1}">A. ${item.option1}
                        ${item.option1 === item.correct_answer ? "<span class='check-icon' style='display: none;color:green'>✔️</span>" : ""}<br>
                    </div>
                    <div class='options-container'>
                        <input type="radio" name="q${index + 1}" data-selected="false"  value="${item.option2}">B. ${item.option2}
                        ${item.option2 === item.correct_answer ? "<span class='check-icon' style='display: none;color:green'>✔️</span>" : ""}<br>
                    </div>
                    <div class='options-container'>
                        <input type="radio" name="q${index + 1}" data-selected="false"  value="${item.option3}">C. ${item.option3}
                        ${item.option3 === item.correct_answer ? "<span class='check-icon' style='display: none;color:green'>✔️</span>" : ""}<br>
                    </div>
                    <div class='options-container'>
                        <input type="radio" name="q${index + 1}" data-selected="false"  value="${item.option4}">D. ${item.option4}
                        ${item.option4 === item.correct_answer ? "<span class='check-icon' style='display: none;color:green'>✔️</span>" : ""}<br>
                    </div>
                    <div class='options-container'>
                      <span class="explanation" style="display: none;"><h3>Explanation</h3>${item.explanation_text}</span>
                    </div>
                `;

                questionsContainer.appendChild(questionDiv);
                var radios = questionDiv.querySelectorAll('input[type="radio"]');
                radios.forEach(radio => {
                    radio.addEventListener('change', function () {

                        var questionId = this.parentNode.parentNode.id;
                        var otherRadios = document.querySelectorAll(`#${questionId} input[type="radio"]`);
                        otherRadios.forEach(otherRadio => {
                            otherRadio.dataset.selected = "false";
                        });
                        this.dataset.selected = "true";
                        examResult[item?.question_id] = this.value === item?.correct_answer;
                        var button = document.querySelector('.question-button:nth-child(' + (index + 1) + ')');
                        button.classList.remove('not-visited', 'not-answered', 'marked');
                        button.classList.add('answered');
                    });
                });
            });
        }

        document.getElementById("mark-for-review").addEventListener("click", function () {
            console.log(question_number);
            var button = document.querySelector('.question-button:nth-child(' + (question_number) + ')');
            console.log(button);
            button.classList.remove('not-visited', 'not-answered', 'answered');
            button.classList.add('marked');
        });

        function populateQuestionButtons(numQuestions) {
            var questionButtons = document.getElementById('question-buttons');
            for (var i = 1; i <= numQuestions; i++) {
                var button = document.createElement('button');
                button.textContent = i;
                button.classList.add('question-button');
                button.onclick = function () {

                    showQuestion(parseInt(this.textContent));
                };
                questionButtons.appendChild(button);
            }
        }

        var countDownDate = new Date().getTime() + 4 * 60 * 60 * 1000;
        var timerInterval = setInterval(function () {
            var now = new Date().getTime();
            var distance = countDownDate - now;
            var hours = Math.floor(distance / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);
            document.getElementById('timer').innerHTML = hours + ":" + minutes + ":" + seconds;
            if (distance < 0) {
                clearInterval(timerInterval);
                document.getElementById('timer').innerHTML = "EXPIRED";
            }
        }, 1000);
        // Confirmation message when leaving the page
        window.addEventListener('beforeunload', function (e) {
          //   Cancel the event
           e.preventDefault();
           //  Chrome requires returnValue to be set
            e.returnValue = '';
        });
        document.getElementById('logout-button').addEventListener('click', function () {
            fetch('/users/logout', {
                method: 'POST',
                credentials: 'same-origin' // Include cookies with the request
            })
                .then(response => {
                    if (response.ok) {
                        // Redirect to the login page
                        window.location.href = '/users/student/login';
                    } else {
                        alert('Failed to log out');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to log out');
                });
        });
    </script>
</body>

</html>