<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teacher</title>
    <link rel="stylesheet" href="/stylesheets/added.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"></script>
</head>

<body>
    <nav class="custom-navbar navbar-light header-container">
        <!-- Company Logo -->
        <a class="navbar-brand" href="/teacher/dashboard">
            <img src="/images/logo.png" width="50" height="50" class="d-inline-block align-top" alt="">
        </a>

        <!-- Person Logo and Logout Dropdown -->
        <div class="person-logout d-flex">
            <!-- Custom Dropdown -->
            <div class="custom-dropdown mr-3">

                <button class="logout-button" id="logout-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewBox="0 0 16 16">
                        <g color="#000000" fill="#ffffff" font-family="sans-serif" font-weight="400"
                            white-space="normal">
                            <path
                                d="M1 7.92a6.94 6.94 0 0 0 .324 2.201A7.004 7.004 0 0 0 8 15a7.004 7.004 0 0 0 6.676-4.879 6.978 6.978 0 0 0-2.662-7.818l-1.145 1.64a4.96 4.96 0 0 1 1.9 5.575A4.99 4.99 0 0 1 8 13a4.99 4.99 0 0 1-4.77-3.482 4.96 4.96 0 0 1 1.9-5.575l-1.144-1.64A6.985 6.985 0 0 0 1 7.92z"
                                overflow="visible"
                                style="line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal" />
                            <path d="M7 1v7h2V.75z" overflow="visible"
                                style="line-height:normal;font-variant-ligatures:none;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;text-transform:none;shape-padding:0;isolation:auto;mix-blend-mode:normal;marker:none" />
                        </g>
                    </svg>
                </button>
            </div>
        </div>
    </nav>
    <div class="question_container">
        <div class="question_heading_container">
            <h3 style="text-align: start;">Questions :</h3>
        </div>
        <div id="questions-list">
            <!-- Questions will be dynamically added here -->
        </div>
    </div>

    <script>
        $(document).ready(function () {
            function fetchQuestions() {
                $.ajax({
                    url: '/question/exam-questions-all', // Your backend endpoint to fetch all questions
                    type: 'GET',
                    success: function (data) {
                        renderQuestions(data); // Render fetched questions
                    },
                    error: function (error) {
                        console.error('Error fetching questions:', error);
                    }
                });
            }

            function renderQuestions(questionGroups) {
                const questionsList = $('#questions-list');
                questionsList.empty(); // Clear existing content

                questionGroups.forEach(group => {
                    const examId = group.exam_id;
                    const questions = group.questions;
                    const questionCount = questions.length; // Number of questions

                    // Create a container for each exam group
                    const examGroup = $('<div>').addClass('exam-group');

                    // Create the exam ID button for collapse
                    const examIdButton = $('<button>')
                        .addClass('btn btn-link d-flex justify-content-between align-items-center wide-button')
                        .attr('type', 'button')
                        .attr('data-toggle', 'collapse')
                        .attr('data-target', `#collapse_${examId}`)
                        .attr('aria-expanded', 'false')
                        .attr('aria-controls', `collapse_${examId}`)
                        .html(`Exam ID: ${examId} - ${questionCount} Questions <i class="fas fa-chevron-down ml-2"></i>`);

                    // Collapse container
                    const collapseContainer = $('<div>')
                        .attr('id', `collapse_${examId}`)
                        .addClass('collapse');

                    // Append Exam ID button and collapse container to examGroup
                    examGroup.append(examIdButton);
                    examGroup.append(collapseContainer);

                    questions.forEach(question => {
                        // Construct HTML for each question
                        const questionHtml = `
                <div class="question-item">
                    <p>${question.question_text.replace(/\n/g, '<br>')}</p>
                    <p><strong>Options:</strong></p>
                    <p>${question.option1}<br>${question.option2}<br>${question.option3}<br>${question.option4}</p>
                    <p><strong>Correct Answer:</strong> ${question.correct_answer}</p>
                    <p><strong>Marks:</strong> ${question.marks}</p>
                    <p><strong>Explanation:</strong> ${question.explanation_text.replace(/\n/g, '<br>')}</p>
                </div>
            `;
                        collapseContainer.append(questionHtml); // Append question to collapse container
                    });

                    questionsList.append(examGroup); // Append exam group to main list
                });
            }


            // Fetch and render questions on page load
            fetchQuestions();

            // Event delegation for dynamically added elements
            $(document).on('click', '.logout-button', function () {
                fetch('/users/logout', {
                    method: 'POST',
                    credentials: 'same-origin' // Include cookies with the request
                })
                    .then(response => {
                        if (response.ok) {
                            // Redirect to the login page
                            window.location.href = '/users/teacher/login';
                        } else {
                            alert('Failed to log out');
                            location.reload();
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Failed to log out');
                        location.reload();
                    });
            });
        });
    </script>
</body>

</html>